#!/bin/bash

# Set variables
WEB_SERVER="nginx"  # Change to your web server (e.g., apache2, httpd)
AUTHORIZED_USERS=("youruser")  # List of allowed users
SSH_PORT="22"  # Default SSH port

echo "[+] Starting security hardening script..."

# Change all user passwords to a strong random one
echo "[+] Changing passwords..."
for user in $(awk -F: '$3 >= 1000 {print $1}' /etc/passwd); do
    if [[ ! " ${AUTHORIZED_USERS[@]} " =~ " ${user} " ]]; then
        NEW_PASS=$(openssl rand -base64 32)
        echo "$user:$NEW_PASS" | sudo chpasswd
        echo "[!] Password changed for: $user"
    fi
done

# Remove unauthorized users
echo "[+] Checking for unauthorized users..."
for user in $(awk -F: '$3 >= 1000 {print $1}' /etc/passwd); do
    if [[ ! " ${AUTHORIZED_USERS[@]} " =~ " ${user} " ]]; then
        sudo userdel -r "$user"
        echo "[!] Removed unauthorized user: $user"
    fi
done

# Kill all processes except the web server
echo "[+] Killing unwanted processes..."
for pid in $(ps -eo pid,comm --no-headers | awk '{print $1}'); do
    if [[ "$(ps -p $pid -o comm=)" != "$WEB_SERVER" ]]; then
        sudo kill -9 "$pid" 2>/dev/null
    fi
done

# Ensure the web server is running
echo "[+] Ensuring web server is running..."
if ! systemctl is-active --quiet "$WEB_SERVER"; then
    sudo systemctl start "$WEB_SERVER"
    echo "[+] Web server started."
fi

# Lock down SSH access
echo "[+] Securing SSH..."
sudo sed -i 's/^#PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
sudo sed -i 's/^#PasswordAuthentication.*/PasswordAuthentication no/' /etc/ssh/sshd_config
sudo systemctl restart sshd
echo "[+] SSH access restricted."

# Set up firewall rules
echo "[+] Configuring firewall..."
sudo ufw reset
sudo ufw allow "$SSH_PORT"/tcp  # Allow SSH
sudo ufw allow 80/tcp  # Allow HTTP
sudo ufw allow 443/tcp  # Allow HTTPS
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw enable
echo "[+] Firewall rules applied."

echo "[+] Security hardening complete!"
